---
- block:
  - name: check target if raspbian os
    ansible.builtin.command:
      cmd: "lsb_release --id"
    register: distro_name
  - name: setup apt repository
    ansible.builtin.copy:
      src: "sources_{{ ansible_distribution }}.list"
      dest: /etc/apt/sources.list
      owner: root
      group: root
      mode: "0644"
    when: '("Raspbian" not in distro_name.stdout) and (not sysbase_skip_apt_repo_setup)'
  - name: setting up dns resolver
    ansible.builtin.template:
      src: "resolv.conf.j2"
      dest: "/etc/resolv.conf"
      owner: "root"
      group: "root"
      mode: "0644"
  - name: upgrade system
    apt: "upgrade=yes update_cache=yes autoremove=yes"
  - name: install system packages
    ansible.builtin.apt:
      name:
        - sudo
        - chrony
        - vim-nox
      state: latest
  - name: create manager group
    ansible.builtin.group: "name={{ sysbase_manager_group }}"
  - name: create debian manager account
    ansible.builtin.user:
      name: "{{ sysbase_manager_account }}"
      group: "{{ sysbase_manager_group }}"
      shell: "/bin/bash"
      groups: "cdrom,floppy,audio,dip,video,plugdev,netdev"
    when: ansible_distribution == 'Debian'
  - name: create ubuntu manager account
    ansible.builtin.user:
      name: "{{ sysbase_manager_account }}"
      group: "{{ sysbase_manager_group }}"
      shell: "/bin/bash"
      groups: "adm,cdrom,sudo,dip,plugdev,lxd,lpadmin,sambashare"
    when: ansible_distribution == 'Ubuntu'
  - name: set manager password
    ansible.builtin.shell: "echo '{{ sysbase_manager_account }}:{{ sysbase_manager_password }}' | chpasswd"
  - name: configure sudo accout list
    ansible.builtin.lineinfile: "dest=/etc/sudoers insertafter=^root line='{{ sysbase_manager_account }} ALL=(ALL:ALL) NOPASSWD: ALL'"
  - name: setup debian sudoers config
    ansible.builtin.lineinfile:
      dest: "/etc/sudoers"
      line: "#includedir /etc/sudoers.d"
      state: "present"
    when: ansible_distribution == 'Debian'
  - name: setup ubuntu sudoers config
    ansible.builtin.lineinfile:
      dest: "/etc/sudoers"
      regexp: '^%sudo\s+'
      line: "%sudo ALL=(ALL:ALL) NOPASSWD: ALL"
      state: "present"
    when: ansible_distribution == 'Ubuntu'
  - name: configure sudo to respect ssh agent forwarding variable
    ansible.builtin.copy:
      src: "allow-ssh-agent-forwarding"
      dest: "/etc/sudoers.d/allow-ssh-agent-forwarding"
      mode: "0440"
      owner: "root"
      group: "root"
  - name: activate en_US.UTF-8 locale
    ansible.builtin.lineinfile:
      path: "/etc/locale.gen"
      regexp: '^# en_US.UTF-8 UTF-8$'
      line: "en_US.UTF-8 UTF-8"
      state: "present"
  - name: generate locale
    ansible.builtin.command:
      cmd: "locale-gen"
  - name: setup root default locale to en_US.UTF-8
    ansible.builtin.lineinfile:
      path: "{{ item }}/.profile"
      insertafter: "EOF"
      line: "export LC_ALL=en_US.UTF-8"
      state: "present"
    loop:
      - "/root"
      - "/home/{{ sysbase_manager_account }}"
  - name: setup chrony
    ansible.builtin.copy:
      src: "chrony.conf"
      dest: "/etc/chrony/chrony.conf"
      mode: "0644"
      owner: "root"
      group: "root"
  - name: setup timezone
    ansible.builtin.lineinfile:
      path: "/etc/timezone"
      line: "Asia/Taipei"
      state: "present"
      mode: "0644"
      owner: "root"
      group: "root"
  - name: setup extra sysctl configuration
    ansible.builtin.copy:
      src: "99-custom.conf"
      dest: "/etc/sysctl.d/99-custom.conf"
      mode: "0644"
      owner: "root"
      group: "root"
  - name: setup localtime
    ansible.builtin.file:
      src: "/usr/share/zoneinfo/Asia/Taipei"
      dest: "/etc/localtime"
      state: "link"
      force: "yes"
      owner: "root"
      group: "root"
  - name: check if grub is used
    ansible.builtin.stat: path=/etc/default/grub
    register: grub_status

  - block:
    - name: setup grub
      ansible.builtin.lineinfile:
        dest: "/etc/default/grub"
        regexp: '^GRUB_CMDLINE_LINUX='
        line: 'GRUB_CMDLINE_LINUX="quiet elevator=deadline"'
        state: "present"
    - name: update grub
      ansible.builtin.command:
        cmd: "update-grub"
    when: grub_status.stat.exists

  - block:
    - name: create swapfile
      ansible.builtin.command:
        cmd: "dd if=/dev/zero of=/swapfile bs=1M count=2048"
    - name: format swapfile
      ansible.builtin.command:
        cmd: "mkswap /swapfile"
    - name: setup swapfile permission
      ansible.builtin.file:
        path: /swapfile
        owner: root
        group: root
        mode: "0600"
    - name: activate swapfile
      ansible.builtin.command:
        cmd: "swapon /swapfile"
    - name: insert swap entry in fstab
      ansible.builtin.lineinfile:
        dest: /etc/fstab
        insertafter: EOF
        line: /swapfile swap swap defaults 0 0
    when: ansible_swaptotal_mb == 0

  tags:
    - sysbase
